# Generated by Django 5.0.2 on 2024-03-01 05:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cashier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Garage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('garage_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Garage nomi')),
                ('number_of_garages', models.CharField(blank=True, max_length=64, null=True, verbose_name=' garage soni')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(blank=True, max_length=64, null=True, verbose_name='boshlanish vaqti')),
                ('end_time', models.CharField(blank=True, max_length=64, null=True, verbose_name='tugash vaqti')),
                ('income', models.CharField(blank=True, max_length=256, null=True, verbose_name='kunlik kirmlar')),
                ('spend', models.CharField(blank=True, max_length=256, null=True, verbose_name='kunlik chiqimlar')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, db_index=True, max_length=150, null=True, verbose_name='Ism Familya')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='noto‘g‘ri_telefon_raqami', message='Noto‘g‘ri telefon raqami', regex='^\\+998[0-9]{9}$')], verbose_name='Telefon raqami')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Foydalanuvchilar',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wages', models.IntegerField(default=0)),
                ('age', models.IntegerField(default=0)),
                ('address', models.CharField(max_length=128)),
                ('experience', models.CharField(max_length=128)),
                ('work_time', models.CharField(max_length=128)),
                ('rating', models.CharField(max_length=128)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('garage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.garage')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.position')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('owner_phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='noto‘g‘ri_telefon_raqami', message='Noto‘g‘ri telefon raqami', regex='^\\+998[0-9]{9}$')], verbose_name='klentni telefon raqami')),
                ('is_delivery', models.BooleanField(default=False)),
                ('car_name', models.CharField(max_length=64)),
                ('car_number', models.CharField(max_length=10)),
                ('is_active', models.IntegerField(choices=[(1, "Bir ozdan so'ng bo'shaydi"), (3, 'tekshrilmoqda')])),
                ('car_problem', models.CharField(max_length=256)),
                ('service_cost', models.IntegerField(default=0)),
                ('start_day', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('employee_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.employee')),
                ('garage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.garage')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=128)),
                ('payment', models.CharField(max_length=128)),
                ('date', models.DateField()),
                ('payment_type', models.IntegerField(choices=[(1, 'payment by card'), (2, 'online payment'), (3, 'pay in cash')], default=1)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.employee')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.order')),
            ],
        ),
    ]
